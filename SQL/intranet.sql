CREATE SEQUENCE SEQ_ALIM
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_DRAFT
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;

CREATE SEQUENCE SEQ_DAILY
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;

CREATE TABLE JOB(
    JOB_CODE NUMBER PRIMARY KEY,
    JOB_NAME VARCHAR2(20) NOT NULL
);

INSERT INTO JOB VALUES(1,'원장');
INSERT INTO JOB VALUES(2,'부원장');
INSERT INTO JOB VALUES(3,'교사');
INSERT INTO JOB VALUES(4,'영양사');
INSERT INTO JOB VALUES(5,'계약직');

CREATE TABLE CLASS(
    CLASS_CODE NUMBER PRIMARY KEY,
    CLASS_NAME VARCHAR2(20) NOT NULL,
    LIMIT_AGE NUMBER NOT NULL,
    MAX_ENTRANCE NUMBER NOT NULL
);

//이부분 수정해서 넣어주세요!!
--INSERT INTO CLASS VALUES(1,'떡잎',2,20);
--INSERT INTO CLASS VALUES(2,'감잎',3,20);
--INSERT INTO CLASS VALUES(3,'귤잎',5,20);
--INSERT INTO CLASS VALUES(4,'밤잎',7,20);



CREATE TABLE EMPLOYEE(
    EMP_CODE NUMBER PRIMARY KEY,
    EMP_NAME VARCHAR2(20) NOT NULL,
    EMP_JOB  NUMBER,
    EMP_NO VARCHAR2(50) NOT NULL UNIQUE,
    EMP_PHONE VARCHAR2(50) NOT NULL,
    EMP_ADDR VARCHAR2(150) NOT NULL,
    HIRE_DATE DATE NOT NULL,
    ENT_DATE DATE,
    ENT_YN VARCHAR2(10) CHECK (ENT_YN IN('Y','N')),
    EMP_CLASS NUMBER,
    HOBONG NUMBER,
    CONSTRAINT FK_EMP_JOB FOREIGN KEY(EMP_JOB) REFERENCES JOB(JOB_CODE),
    CONSTRAINT FK_EMP_CLASS FOREIGN KEY(EMP_CLASS) REFERENCES CLASS(CLASS_CODE)
);    


CREATE TABLE DRAFT(
    DRAFT_NO NUMBER PRIMARY KEY,
    DRAFT_TYPE NUMBER NOT NULL,
    DRAFT_EMP NUMBER,
    DRAFT_DATE DATE NOT NULL,
    DRAFT_YN VARCHAR2(10) CHECK (DRAFT_YN IN('Y','N')),
    SIGN_EMP NUMBER,
    SIGN_YN VARCHAR2(10) CHECK (SIGN_YN IN('Y','N')),
    RETURN_REASON VARCHAR2(50),
    DRAFT_TITLE VARCHAR2(50) NOT NULL,
    DRAFT_CONTENT VARCHAR2(300) NOT NULL,
    DRAFT_FILE VARCHAR2(300),
    DRAFT_PROCESS VARCHAR2(20) CHECK (DRAFT_PROCESS IN('검토','완료','반려')),
    CONSTRAINT FK_DRAFT_EMP FOREIGN KEY(DRAFT_EMP) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT FK_SIGN_EMP FOREIGN KEY(SIGN_EMP) REFERENCES EMPLOYEE(EMP_CODE)
);   

CREATE TABLE DAILY(
    DAILY_NO NUMBER PRIMARY KEY,
    DAILY_CLASS NUMBER,
    DAILY_TITLE VARCHAR2(50) NOT NULL,
    DAILY_DATE DATE,
    DAILY_EMP_NAME VARCHAR2(20) NOT NULL,
    DAILY_PASS VARCHAR2(50),
    DAILY_FILE VARCHAR2(150),
    DAILY_EMP NUMBER,
    IS_DELETE VARCHAR2(10) CHECK(IS_DELETE IN ('Y','N')),
    CONSTRAINT FK_DAILY_EMP FOREIGN KEY(DAILY_EMP) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT FK_DAILY_CLASS FOREIGN KEY(DAILY_CLASS) REFERENCES CLASS(CLASS_CODE)
);





